apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
   name: redis

spec:
   replicas: 3
   serviceName: redis
   template:
      metadata:
        labels:
          app: redis
   
      spec:
        initContainers:
        - name: init-redis
          image: redis:3.2.7-alpine
          command: 
          - sh
          - "-c"
          - |
            set -ex
            #[[ `hostname` =~ -([0-9]+)$ ]] || exit 1
            ordinal=$(echo `hostname` | cut -d'-' -f2 )            
            #ordinal=${BASH_REMATCH[1]}
            if [[ $ordinal -eq 0 ]]; then
              cp /mnt/config-map/master.conf /etc/redis.conf
            else             
              cp /mnt/config-map/slave.conf /etc/redis.conf
            fi
          volumeMounts:
            - name: conf
              mountPath: /etc/
              subPath: redis.conf
            - name: config
              mountPath: /mnt/config-map
            - name: redis-data
              mountPath: /etc/data2
        
        containers:
                #-  command: [sh, -c, source /redis-config/init.sh ]
         - image: redis:3.2.7-alpine
           imagePullPolicy: Always
           name: redis
           command: [ "redis-server" ]
           args: 
           - /etc/redis.conf 
           ports: 
           - containerPort: 6379
             name: redis
           volumeMounts:
             - name: config
               mountPath: /etc/redis
             
             - name: conf
               mountPath: /etc/
               subPath: redis.conf
             - name: redis-data
               mountPath: /etc/data2

        volumes:
        - name: config
          configMap:
              name: redis-config
        
        - name: conf
          emptyDir: {}

        - name: redis-data
          persistentVolumeClaim:
             claimName: redis-pvc
